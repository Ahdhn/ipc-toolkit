
.. _program_listing_file_src_broad_phase_broad_phase.hpp:

Program Listing for File broad_phase.hpp
========================================

|exhale_lsh| :ref:`Return to documentation for file <file_src_broad_phase_broad_phase.hpp>` (``src/broad_phase/broad_phase.hpp``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   
   #include <Eigen/Core>
   
   #include <ipc/broad_phase/collision_candidate.hpp>
   
   namespace ipc {
   
   enum class BroadPhaseMethod {
       BRUTE_FORCE,
       HASH_GRID,
       SPATIAL_HASH,
   };
   
   void construct_collision_candidates(
       const Eigen::MatrixXd& V,
       const Eigen::MatrixXi& E,
       const Eigen::MatrixXi& F,
       Candidates& candidates,
       double inflation_radius = 0,
       const BroadPhaseMethod& method = BroadPhaseMethod::HASH_GRID,
       bool ignore_codimensional_vertices = false,
       const std::function<bool(size_t, size_t)>& can_collide =
           [](size_t, size_t) { return true; });
   
   void construct_collision_candidates(
       const Eigen::MatrixXd& V0,
       const Eigen::MatrixXd& V1,
       const Eigen::MatrixXi& E,
       const Eigen::MatrixXi& F,
       Candidates& candidates,
       double inflation_radius = 0,
       const BroadPhaseMethod& method = BroadPhaseMethod::HASH_GRID,
       bool ignore_codimensional_vertices = false,
       const std::function<bool(size_t, size_t)>& can_collide =
           [](size_t, size_t) { return true; });
   
   } // namespace ipc
